@model Model.ViewModel.CatalogoEmpresaDTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout/admin.cshtml";
}

@using (Html.BeginForm("CreateOrUpdate", "CatalogoEmpresas", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="container-fluid">
    <button class="returnB" type="button" data-dismiss="modal" aria-label="Return" onclick="location.href='@Url.Action("Index","CatalogoEmpresas")'">
        <span aria-hidden="true" style="font-size:50px"><i class="fas fa-arrow-left"></i></span>
    </button>
    <div class="container form-horizontal" style="margin-top:20px">

        <h2>Crear Catalogo</h2>
        <h4 style="color:grey">Catálogo Productos Consigueloo</h4>
        <div class="card-header color-blue3">
            <strong> <i class="fas fa-table color-green"></i> Datos de la página</strong>
        </div>
        <br/>
        @Html.HiddenFor(item => Model.id)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.nombreProducto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombreProducto, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombreProducto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            <div class="col-md-3">
                @Html.LabelFor(model => model.imagePath, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" accept="image/*" id="imageFile" name="imageFile" onchange="loadFile(event)" />
                </div>
            </div>
            @if (Model.imagePath != null)
                {
                    <div class="col-md-6">
                        <img class="img-preview" src="../@Model.imagePath" id="preview"/>
                    </div>
                }
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.pagina, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.pagina, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.pagina, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-primary" />
            </div>
        </div>
    </div>
</div>
}
<style>
    .img-preview{
        position:relative;
        width:35%;
        height:auto;
        top:0;
        border-radius:15px;
    }
</style>
<script>
    var loadFile = function (event) {
        var output = document.getElementById('preview');
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src) // free memory
        }
    };
</script>