@model Model.ViewModel.AnuncioDTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm("CreateNew", "Anuncios", FormMethod.Post, new { area = "Anuncios", enctype = "multipart/form-data" }))
{
    
    <div class="container">
        <h3>Crear</h3>
        <div class="form-horizontal">
            <h4>Anuncio</h4>
            <hr />
            <div class="form-group col-6 hidden">
                @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">

                    <input class="form-control col-md-12 text-box single-line" name="duracion" id="duracion" type="text" value="@ViewBag.Duracion">
                    @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-12">
                        @Html.DropDownList("categoriaInput", (SelectList)ViewBag.Categorias, new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.categoria, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-6">
                    @Html.LabelFor(model => model.categoria, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-12">
                        @Html.DropDownList("localidadInput", (SelectList)ViewBag.Localidades, new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.categoria, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.categoria, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                @foreach (var item in ViewBag.Caracteristicas)
                {


                    if (item.Equals("Título"))
                    {
                        <div class="form-group col-6 ">
                            @Html.LabelFor(model => model.titulo, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    else if (item.Equals("Información de contacto"))
                    {
                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.nombreContacto, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.nombreContacto, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                @Html.ValidationMessageFor(model => model.nombreContacto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">
                                @Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                @Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-group col-6">
                            @Html.LabelFor(model => model.celularContacto, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">

                                @Html.EditorFor(model => model.celularContacto, new { htmlAttributes = new { @class = "form-control col-md-12" } })
                                @Html.ValidationMessageFor(model => model.celularContacto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    else if (item.Contains("Descripción"))
                    {
                        <div class="form-group col-12">
                            @Html.LabelFor(model => model.descripcion, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-12">
                                @Html.TextAreaFor(model => model.descripcion, htmlAttributes: new { @class = "form-control col-md-12" })
                                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })

                            </div>
                        </div>

                    }


                    else if (item.Equals("Imagen"))
                    {
                        <div class="form-group">
                            <div class="col-md-10">
                                <div class="checkbox ">

                                    @Html.CheckBoxFor(model => model.actImagen, htmlAttributes: new { @class = "hidden", @checked = true })
                                    @*@Html.HiddenFor(model => model.actImagen, htmlAttributes: new { @checked = true })*@
                                    @Html.ValidationMessageFor(model => model.actImagen, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-6">
                            <span>Foto:</span>
                            @*@Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-10">
                                <input type="file" id="imagen" name="imagen" runat="server" />
                            </div>
                        </div>
                    }
                    else if (item.Equals("Catálogo"))
                    {
                        <div class="form-group col-6">

                            <div class="col-md-10">
                                <div class="checkbox ">
                                    @Html.CheckBoxFor(model => model.actCatalogo, htmlAttributes: new { @class = "hidden", @checked = true })
                                    @Html.ValidationMessageFor(model => model.actCatalogo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group col-6">
                            <span>Foto:</span>
                            @*@Html.LabelFor(model => model.imagen, htmlAttributes: new { @class = "control-label col-md-2" })*@
                            <div class="col-md-10">
                                <input type="file" id="catalogo" name="catalogo" runat="server" />
                            </div>
                        </div>
                    }

                }
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" onclick="ActivarLoader()" />
                </div>
            </div>

        </div>
    </div>
    
            }


            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>
